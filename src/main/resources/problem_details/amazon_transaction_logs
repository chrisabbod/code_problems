Your Amazonian team is responsible for maintaining a monetary transaction service.
The transactions are tracked in a log file.

A log file is provided as a string array where each entry represents a transaction to service.
Each transaction consists of:
- sender_user_id: Unique identifier for the user that initiated the transaction. It consists
of only digits with at most 9 digits.
- recipient_user_id: Unique identifier for the user that is receiving the transaction. It
consists of only digits with at most 9 digits.
- amount_of_transaction: The amount of the transaction. It consists of only digits with at
most 9 digits.

The values are separated by a space. For example, "sender_user_id recipient_user_id
amount_of_transaction".

Users that perform an excessive amount of transactions might be abusing the service so you
have been tasked to identify the users that have a number of transactions over a threshold.
The list of user ids should be ordered in ascending numeric value.

Example
logs = ["88 99 200", "88 99 300", "99 32 100", "12 12 15"]
threshold = 2

The transactions count for each user, regardless of role are:
ID  Transactions
--  ------------
99  3
88  2
12  1
32  1

There are two users with at least threshold = 2 transactions: 99 and 88. In ascending order,
the return array is ['88', '99'].

Note: In the last log entry, user 12 was on both sides of the transaction. This counts as
only 1 transaction for user 12.

Function Description
Complete the function processLogs in the editor below.

The function has the following parameter(s):

- string logs[n]: each logs[i] denotes the i^th entry in the logs
- int threshold: the minimum number of transactions that a user must have to be included
in the result
Returns:
- string[]: an array of user id's as strings, sorted ascending by numeric value

Input Format for Custom Testing
Input from stdin will be processed as follows and passed to the function.

- The first line contains the integer, n, the size of logs
- The following n lines contain a string, logs[i]
- The last line contains an integer, threshold

Sample Case 0

Sample Input

STDIN       Function
-----       --------
4       ->  logs[] size n = 4
1 2 50  ->  logs = ["1 2 50", "1 7 70", 1 3 20", "2 2 17"]
1 7 70
1 3 20
2 2 17
2       ->  threshold = 2

Sample Output
1
2

Explanation

ID  Transactions
--  ------------
1   3
2   2
7   1
3   1

Only users 1 and 2 have at least threshold = 2 transactions. The return array in
numerically ascending order is ["1", "2"]. Note that in the last log entry, the user
with id 2 performed both roles in the transaction. This is counted as one transaction
for the user.

/**
 * Task
 * Identify users that have a number of transactions over the threshold
 * List of users should be ordered in ascending numeric value
 * If user is on both sides of transaction it counts as 1 transaction
 *
 *
 * Solution:
 *
 * 1. Create Sender array - Parse the first string in the array
 * 2. Create Receiver array - Parse the second string in the array
 * 3. Make threshold array - Parse the third string in the array
 * 4. Compare sender, receiver, and transaction arrays. If sender != receiver
 * and id is not in id array add to id map and initialize at 1 transaction
 * 5. If they are in the array, increment each id
 * 6. Compare threshold number to map
 * 7. Output in ascending order any ids over the threshold
 *
 */